#!/usr/bin/php -q
<?php

/**
 *  @File
 *  This script creates EBS snapshots on the AWS cloud.
 *
 *  We offer no warranty or guarantee - use this code at your own risk!
 *  All code is Copyright (C) 2012, Applied Trust Engineering, Inc.
 *
 */

/**
 *  This script expects an AWS Access Key, Secret Access Key, and a 
 *  Volume ID. It sends a command to the AWS API to create a new EBS
 *  snapshot of the specified volume.
 *
 *  Written by Chris McDermott, AppliedTrust, chris@appliedtrust.com
 *    v2.3 04/12/2012
 *
 */

$options = getopt("S:K:v:r:");
if (!isset($options["S"])) { usage(); }
if (!isset($options["K"])) { usage(); }
if (!isset($options["v"])) { usage(); }

define('AWS_KEY', $options["K"]);
define('AWS_SECRET_KEY', $options["S"]);

if (isset($options["r"])) {
  $region = $options["r"];
} else {
  $region = "us-east-1";
}

error_reporting(-1);
require_once '/usr/local/aws-php-sdk/sdk.class.php';

$ec2 = new AmazonEC2();
$ec2 = $ec2->set_region($region);

$description = $ec2->describe_volumes(array(
	'VolumeId' => $options["v"],
));

$text = "Nagios snap of " . $options["v"];
if ($description->body->volumeSet->item->attachmentSet->item->status == "attached") {
	$device = $description->body->volumeSet->item->attachmentSet->item->device;
	$instance = $description->body->volumeSet->item->attachmentSet->item->instanceId;
	$value = $description->body->volumeSet->item->tagSet->item->value;
	$text = $text . " - " . $device . " on " . $instance . " (" . $value . ")";
}

$response = $ec2->create_snapshot( $options["v"], $text);
if ($response->isOK()) {
	print "EBS-snapshot OK - Created snapshot " . $response->body->snapshotId . " of volume ".$options["v"]."|\n";
} else {
	print "EBS-snapshot CRITICAL - Error creating snapshot of volume ".$options["v"].": ".$response->body->Errors->Error->Message."|\n";
	exit(2);
}
exit(0);

function usage() {
	echo "usage: create_ebs_snapshot -K <accesskey> -S <secretkey> -v <volume-id>\n";
	exit(1);
}
